{"id":"E2JSsFvN8ilB6k42","createdAt":"2024-02-07T19:00:18.525Z","updatedAt":"2024-03-11T15:05:32.142Z","name":"Validaciones reporte moneda","active":true,"nodes":[{"parameters":{"rule":{"interval":[{"field":"minutes","minutesInterval":30}]}},"id":"d991b983-8454-4807-a387-a4492374ebf0","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.1,"position":[400,540]},{"parameters":{"method":"POST","url":"https://chat.googleapis.com/v1/spaces/AAAAkhgh6kE/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=cnd9eJOsm1k8Tdp7QOt091i74Ldw5_mCnWR_SMwdGrw","sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"={{ $json.text }}"}]},"options":{}},"id":"4e19a580-4323-4eea-961d-7b1f458099a0","name":"HTTP Request","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1640,540]},{"parameters":{"content":"## Validaciones \n* Validar que los nombres de pagadores estén exactamente iguales tanto en kimchi como en plataforma pronto pago.\n* Validar que la fecha de emisión de la factura no sea futura al día del reporte.\n* Validar que las operaciones no tengan fecha de pago fin de semana o dia festivo.\n* Validar que pagadores que operan por primera vez (nuevos) aparezcan en la carpeta emisor.\n* Validar que las cesiones de facturas que no son compras de carteras están en moneda.\n* Validar que los pagos aplicados en Kimchi se reflejen en Controller\n* Validar que no haya ID duplicados","height":240,"width":745},"id":"27729dbb-8a42-4cbb-ab06-03226e417f0e","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[380,180]},{"parameters":{"operation":"executeQuery","query":"SELECT operation_id , count(*) cuenta FROM cumplo_db_dwh.srm_invoices si\n       where operation_id is not null\n       group by operation_id \n       having count(*) > 1","options":{}},"id":"02f023c6-55f9-4da5-834c-c6ffd16d8a85","name":"IDs duplicados","type":"n8n-nodes-base.mySql","typeVersion":2.1,"position":[880,540],"credentials":{"mySql":{"id":"iO0TJHhdOEyQJN7H","name":"Admin CL Write"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nlet text = \"\";\nlet messages = []\nfor (const item of $input.all()) {\n  if(item.json.success){\n    return []\n  }\n  //our pizza delivery *has arrived*!\\nThank you for using _Cymbal Pizza!_\n  messages.push(`La operación ${item.json.operation_id} existe ${item.json.cuenta} veces.`)\n}\n\nreturn {text:messages.join('\\n')};"},"id":"d38addb4-41eb-4c01-936f-9a8ad2e97fa4","name":"Code","type":"n8n-nodes-base.code","typeVersion":1,"position":[1220,540]},{"parameters":{"operation":"executeQuery","query":"SELECT operation_id ,fecha_emision  FROM cumplo_db_dwh.srm_invoices si\n       where fecha_emision > CURRENT_DATE()","options":{}},"id":"8da53229-e5d9-4876-aaaf-20b3e3e6e03b","name":"Fecha Emision","type":"n8n-nodes-base.mySql","typeVersion":2.1,"position":[880,880],"credentials":{"mySql":{"id":"iO0TJHhdOEyQJN7H","name":"Admin CL Write"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nlet text = \"\";\nlet messages = []\nfor (const item of $input.all()) {\n    if(item.json.success){\n    return []\n  }\n  //our pizza delivery *has arrived*!\\nThank you for using _Cymbal Pizza!_\n  messages.push(`La operación ${item.json.operation_id} tiene fecha de emisión ${item.json.fecha_emision} .`)\n}\n\nreturn {text:messages.join('\\n')};"},"id":"2106a072-6cf5-4320-a3cf-e958c0f47c32","name":"Code1","type":"n8n-nodes-base.code","typeVersion":1,"position":[1220,880]},{"parameters":{"method":"POST","url":"https://chat.googleapis.com/v1/spaces/AAAAkhgh6kE/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=cnd9eJOsm1k8Tdp7QOt091i74Ldw5_mCnWR_SMwdGrw","sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"={{ $json.text }}"}]},"options":{}},"id":"d7f85299-50ed-4701-bcfb-3ca31b64672d","name":"HTTP Request1","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1640,880]},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nlet text = \"\";\nlet messages = []\nlet updates =[];\nfor (const item of $input.all()) {\nif(item.json.kimchi!=item.json.dwh_name){\n  messages.push(`El RUT ${item.json.document_number} dice \"${item.json.dwh_name}\" en dwh srm_payers y en Kimchi dice \"${item.json.kimchi}\"`)\nupdates.push(`update srm_payers set companyname ='${item.json.kimchi}' where id =${item.json.srm_payer_id};`)\n}\n  \n}\nif(updates.length>0){\n  messages.push( '\\n\\n' + updates.join('\\n'))\n}\nif(messages.length==0){\n  return []\n}\nreturn {text:messages.join('\\n')};"},"id":"7c9d0c48-45ff-4777-9c24-16c2dbb78d1c","name":"Code2","type":"n8n-nodes-base.code","typeVersion":2,"position":[1520,1280]},{"parameters":{"method":"POST","url":"https://chat.googleapis.com/v1/spaces/AAAAkhgh6kE/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=cnd9eJOsm1k8Tdp7QOt091i74Ldw5_mCnWR_SMwdGrw","sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"={{ $json.text }}"}]},"options":{}},"id":"a18bb0ad-b17f-4890-ac0b-3aa437a71233","name":"HTTP Request2","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1920,1280]},{"parameters":{"operation":"executeQuery","query":"select se.document_number,sp.business_name as srm, ce.document_number ,ce.business_name as kimchi  from api_srm.srm_enterpriseidentity se \ninner join api_srm.srm_enterprise  sp on se.enterprise_id =sp.id\ninner join api_srm.srm_payer sp2 on sp2.enterprise_id = sp.id\ninner join api_registry_common.core_enterprise ce on se.document_number =ce.document_number \n","options":{}},"id":"0b924bd2-ca76-4977-afa1-c8426e2de2a9","name":"Nombres Kimchi/srm","type":"n8n-nodes-base.mySql","typeVersion":2.1,"position":[880,1140],"credentials":{"mySql":{"id":"ZOk8Jv4CnQ8P1wLe","name":"Kimchi production financing"}}},{"parameters":{"mode":"combine","mergeByFields":{"values":[{"field1":"document_number","field2":"rut"}]},"options":{}},"id":"9e74c8e6-ae94-4d77-a304-ee776d0908b3","name":"Merge","type":"n8n-nodes-base.merge","typeVersion":2.1,"position":[1160,1280]},{"parameters":{"operation":"executeQuery","query":"SELECT id as srm_payer_id,REPLACE(rutpagador,'-','') as rut ,companyname as dwh_name  FROM cumplo_db_dwh.srm_payers","options":{}},"id":"0b5f3225-e017-4c94-9584-fbaf033c85f4","name":"srm_payers","type":"n8n-nodes-base.mySql","typeVersion":2.1,"position":[880,1360],"credentials":{"mySql":{"id":"iO0TJHhdOEyQJN7H","name":"Admin CL Write"}}},{"parameters":{"operation":"executeQuery","query":" select distinct 'MCC' as fondo,\npagador.id,\nconcat(op.id,r.id) as operation_id,\nr.monto_respaldo as amount , \nr.monto_respaldo as face_amount,\nr.monto_respaldo as cession_amount,\nproveedor.razon_social as proveedor,\nproveedor.numero_identificador as rut,\nsubstr(proveedor.numero_identificador, 1, length(proveedor.numero_identificador) - 1) as rutsdv,\nsubstr(proveedor.numero_identificador, length(proveedor.numero_identificador) , 1) as dv, \nrc.fecha  as fechacesion,\npagador.razon_social  as pagador, \npagador.numero_identificador as rutpagador, \nsubstr(pagador.numero_identificador, 1, length(pagador.numero_identificador) - 1) as rutpagadorsdv,\nsubstr(pagador.numero_identificador, length(pagador.numero_identificador) , 1) as dvpagador, \n'' as group,\npagador.subindustria as subindustry,\nti.clasificacion_riesgo  as risk,\npagador.linea  as line,\nr.folio  as folio,\nop.fecha_curse  as fecha_compra,\nr.fecha_emision as fecha_emision,\nop.tasa_interes/12/100 as tasa,\nr.fecha_pago as fecha_pago,\nr.fecha_pago_real,\nr.id as srm_id,\n'Pronto pago' as tipo_producto\nfrom operaciones op\ninner join operaciones_producto_links opl on op.id=opl.operacion_id \ninner join productos p on opl.producto_id =p.id\ninner join operacion_inversiones_operacion_links oinv on op.id=oinv.operacion_id \ninner join operacion_inversiones_inversionista_links oi on oinv.operacion_inversion_id  = oi.operacion_inversion_id \ninner join empresas e on oi.empresa_id =e.id\ninner join operaciones_respaldos_links orl on orl.operacion_id =op.id\ninner join respaldos r on orl.respaldo_id = r.id\ninner join empresas proveedor on r.numero_documento_emisor =proveedor.numero_identificador\ninner join empresas pagador on r.numero_documento_pagador  =pagador.numero_identificador\nleft join respaldo_cesiones_respaldo_links rcrl on r.id=rcrl.respaldo_id \nleft join respaldo_cesiones rc on rcrl.respaldo_cesion_id =rc.id\ninner join tasas_inversionistas_inversionista_links tiil on tiil.empresa_id =e.id\ninner join tasas_inversionistas_pagador_links tipl on tiil.tasas_inversionista_id =tipl.tasas_inversionista_id and tipl.empresa_id = pagador.id\ninner join tasas_inversionistas ti on tiil.tasas_inversionista_id =ti.id \nwhere p.codigo ='PRONTO_PAGO' and e.codigo = 'MCC' and rc.fecha is null\n\n\n\n","options":{}},"id":"059d7271-92ce-42e7-85a0-b4e39b387db2","name":"Postgres","type":"n8n-nodes-base.postgres","typeVersion":2.2,"position":[860,720],"credentials":{"postgres":{"id":"PDDppsKax3TYCjmB","name":"Backoffice"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nlet text = \"\";\nlet messages = []\nfor (const item of $input.all()) {\n    if(item.json.success){\n    return []\n  }\n  //our pizza delivery *has arrived*!\\nThank you for using _Cymbal Pizza!_\n  messages.push(`La operación ${item.json.operation_id} no tiene cesión registrada.`)\n}\n\nreturn {text:messages.join('\\n')};"},"id":"64653da7-de01-4aaa-bbeb-110e592a6e31","name":"Code3","type":"n8n-nodes-base.code","typeVersion":2,"position":[1220,720]},{"parameters":{"method":"POST","url":"https://chat.googleapis.com/v1/spaces/AAAAkhgh6kE/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=cnd9eJOsm1k8Tdp7QOt091i74Ldw5_mCnWR_SMwdGrw","sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"={{ $json.text }}"}]},"options":{}},"id":"a074ddb3-aec5-4d26-8581-9d171c75e7c0","name":"HTTP Request3","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1640,720]}],"connections":{"Schedule Trigger":{"main":[[{"node":"IDs duplicados","type":"main","index":0},{"node":"Fecha Emision","type":"main","index":0},{"node":"Nombres Kimchi/srm","type":"main","index":0},{"node":"srm_payers","type":"main","index":0},{"node":"Postgres","type":"main","index":0}]]},"IDs duplicados":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Fecha Emision":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"Code2":{"main":[[{"node":"HTTP Request2","type":"main","index":0}]]},"Nombres Kimchi/srm":{"main":[[{"node":"Merge","type":"main","index":0}]]},"srm_payers":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Postgres":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Code3":{"main":[[{"node":"HTTP Request3","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrencyRules":[]}},"pinData":{},"versionId":"feedcdaa-8dcf-42f0-9491-ca3bd43d2add","triggerCount":1,"tags":[]}