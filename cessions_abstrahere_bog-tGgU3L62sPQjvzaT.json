{"id":"tGgU3L62sPQjvzaT","createdAt":"2024-06-26T20:11:09.983Z","updatedAt":"2024-06-27T03:44:20.690Z","name":"cessions_abstrahere_bog","active":false,"nodes":[{"parameters":{},"id":"a733a933-98df-4220-9404-f54c4bc99d24","name":"When clicking \"Execute Workflow\"","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[320,320]},{"parameters":{"operation":"executeQuery","query":"select o.id as op_id,o.created_at ,orl.respaldo_id, rcr.respaldo_cesion_id, oel.etapa_id, o.fecha_curse, o.numero_facturas from public.operaciones o\nleft join public.operaciones_respaldos_links orl on o.id = orl.operacion_id\nleft join public.respaldo_cesiones_respaldo_links rcr on orl.respaldo_id  = rcr.respaldo_id\nleft join public.operaciones_etapa_links oel on o.id = oel.operacion_id \nwhere o.created_at >= current_date - 1 and oel.etapa_id = 7 and rcr.respaldo_cesion_id is null and o.moneda = 'CLP'","options":{}},"id":"0f352e61-5026-41f1-9fa6-3c6b34676d71","name":"pendientes_por_ceder","type":"n8n-nodes-base.postgres","typeVersion":2.2,"position":[540,320],"credentials":{"postgres":{"id":"PDDppsKax3TYCjmB","name":"Backoffice"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"respaldos","mode":"list","cachedResultName":"respaldos"},"returnAll":true,"where":{"values":[{"column":"id","value":"={{ $json.respaldo_id }}"}]},"options":{"outputColumns":["id","folio","fecha_emision","numero_documento_emisor","numero_documento_pagador"]}},"id":"77a55071-9200-49f5-acb8-8034d07110a7","name":"respaldos_bog","type":"n8n-nodes-base.postgres","typeVersion":2.2,"position":[760,320],"credentials":{"postgres":{"id":"PDDppsKax3TYCjmB","name":"Backoffice"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nfunction convertDateString(input) {\n    // Create a new Date object from the input string\n    const date = new Date(input);\n\n    // Extract the year, month, and day parts\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\n    const day = String(date.getDate()).padStart(2, '0');\n\n    // Combine the parts into the desired format\n    return `${year}-${month}-${day}`;\n}\n\nfunction set_underscore(document) {\n  \n  const firstPart = document.slice(0, -1);\n  const lastCharacter = document.slice(-1);\n\n  return `${firstPart}-${lastCharacter}`;\n  \n}\n\nfor (const item of $input.all()) {\n  const emisor = set_underscore(item.json.numero_documento_emisor);\n  const pagador = set_underscore(item.json.numero_documento_pagador);\n  item.json.numero_documento_emisor = emisor;\n  item.json.numero_documento_pagador = pagador;\n\n  const output = convertDateString(item.json.fecha_emision);\n  item.json.fecha_emision = output;\n  \n}\n\nreturn $input.all();"},"id":"c82259fd-9fab-4a70-b9c3-647cc4236109","name":"format_respaldos","type":"n8n-nodes-base.code","typeVersion":2,"position":[980,320]},{"parameters":{"operation":"select","table":{"__rl":true,"value":"abstrahere_cession","mode":"list","cachedResultName":"abstrahere_cession"},"returnAll":true,"where":{"values":[{"column":"sender_rut","value":"={{ $json.numero_documento_emisor }}"},{"column":"dte_invoice","value":"={{ $json.folio }}"},{"column":"invoice_issue_date","value":"={{ $json.fecha_emision }}"},{"column":"debtor_rut","value":"={{ $json.numero_documento_pagador }}"}]},"options":{}},"id":"debf338c-cc97-46f4-ae91-e23f5573ebc0","name":"api_srm.abstrahere_cession","type":"n8n-nodes-base.mySql","typeVersion":2.1,"position":[1200,320],"credentials":{"mySql":{"id":"GfAtEMN17ffLi7i9","name":"apli_srm"}}},{"parameters":{"operation":"executeQuery","query":"SELECT x.id, x.numero_identificador FROM public.empresas x\nWHERE numero_identificador in ({{ \"'\"+ $json.debtor_rut + \"'\"}}, \n{{ \"'\"+ $json.cessionary_rut + \"'\"}}, {{ \"'\"+ $json.grantor_rut + \"'\"}})","options":{}},"id":"8d260032-b517-448d-adcf-debf7f294956","name":"get_enterprise","type":"n8n-nodes-base.postgres","typeVersion":2.2,"position":[1640,320],"credentials":{"postgres":{"id":"PDDppsKax3TYCjmB","name":"Backoffice"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nconst format_respaldo = $('format_respaldos').all()\n\nconst respaldos = [];\n\nfor (const item of format_respaldo) {\n  respaldos.push(item.json)\n}\n\nfunction findRespaldo(folio, fecha, rut) {\n    return respaldos.find(resp => resp.folio === folio  &&  resp.fecha_emision===fecha && resp.numero_documento_emisor === rut);\n}\n\nfunction removeHyphen(input) {\n    return input.replace('-', '');\n}\n\nfor (const item of $input.all()) {\n  \n  const respaldo = findRespaldo(\n    item.json.dte_invoice,\n    item.json.invoice_issue_date,\n    item.json.sender_rut\n    );\n   item.json.respaldo_id_bog = respaldo.id;\n   item.json.cessionary_rut = removeHyphen(item.json.cessionary_rut);\n   item.json.debtor_rut = removeHyphen(item.json.debtor_rut);\n   item.json.grantor_rut = removeHyphen(item.json.grantor_rut);\n\n}\n\nreturn $input.all();"},"id":"4d1a907f-185e-4fb3-9b0c-7a288cb71a33","name":"format_abstrahere_cession_resp_bog","type":"n8n-nodes-base.code","typeVersion":2,"position":[1420,320]},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nfunction removeDuplicateEnterprise(enterprises) {\n    // Create a new Map to hold unique users by id\n    const enterpriseMap = new Map();\n    \n    enterprises.forEach(enterprise => {\n        // Use the user's id as the key in the Map\n        enterpriseMap.set(enterprise.id, enterprise);\n    });\n    \n    // Convert the Map values back to an array\n    return Array.from(enterpriseMap.values());\n}\n\n\nconst empresas_totales = $input.all()\n\nconst empresas = [];\n\nfor (const item of empresas_totales) {\n  empresas.push(item.json)\n}\n\nconst enterprises = removeDuplicateEnterprise(empresas);\n\nfunction findEnterprise(rut) {\n    return enterprises.find(ent => ent.numero_identificador === rut )\n}\n\nlet abstrahere_cession = $('format_abstrahere_cession_resp_bog').all()\n\n\nfor (const item of abstrahere_cession) {\n  \n  const cessionary_enterprise = findEnterprise(item.json.cessionary_rut)\n  item.json.cessionary_enterprise = cessionary_enterprise.id\n\n  const empresa_deudora = findEnterprise(item.json.debtor_rut)\n  item.json.debtor_enterprise = empresa_deudora.id\n\n  const grantor_enterprise = findEnterprise(item.json.grantor_rut)\n  item.json.grantor_enterprise = grantor_enterprise.id\n}\n\nreturn abstrahere_cession;"},"id":"b426b714-8dc3-46a4-978d-eee9eb278142","name":"abstrahere_cession_bog","type":"n8n-nodes-base.code","typeVersion":2,"position":[1860,320]}],"connections":{"When clicking \"Execute Workflow\"":{"main":[[{"node":"pendientes_por_ceder","type":"main","index":0}]]},"pendientes_por_ceder":{"main":[[{"node":"respaldos_bog","type":"main","index":0}]]},"respaldos_bog":{"main":[[{"node":"format_respaldos","type":"main","index":0}]]},"format_respaldos":{"main":[[{"node":"api_srm.abstrahere_cession","type":"main","index":0}]]},"api_srm.abstrahere_cession":{"main":[[{"node":"format_abstrahere_cession_resp_bog","type":"main","index":0}]]},"format_abstrahere_cession_resp_bog":{"main":[[{"node":"get_enterprise","type":"main","index":0}]]},"get_enterprise":{"main":[[{"node":"abstrahere_cession_bog","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"pinData":{},"versionId":"5676508e-d94d-4194-a56b-74107d4be024","triggerCount":0,"tags":[]}